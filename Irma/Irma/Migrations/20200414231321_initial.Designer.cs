// <auto-generated />
using System;
using Irma.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Irma.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200414231321_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Irma.Models.Mjerenje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Senzorid")
                        .HasColumnType("int");

                    b.Property<string>("alarm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maxVrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("minVrijednost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("validnostMjeranja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vrijednostMjerenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vrijemeMjerenja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Senzorid");

                    b.ToTable("Mjerenja");
                });

            modelBuilder.Entity("Irma.Models.Senzor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Uredjajid")
                        .HasColumnType("int");

                    b.Property<string>("imeSenzora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("senzorId")
                        .HasColumnType("int");

                    b.Property<string>("tipSenzora")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Uredjajid");

                    b.ToTable("Senzori");
                });

            modelBuilder.Entity("Irma.Models.Uredjaj", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("deviceId")
                        .HasColumnType("int");

                    b.Property<string>("listaLokacija")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Uredjaji");
                });

            modelBuilder.Entity("Irma.Models.XMLDoc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dokument")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("XMLDocs");
                });

            modelBuilder.Entity("Irma.Models.Mjerenje", b =>
                {
                    b.HasOne("Irma.Models.Senzor", null)
                        .WithMany("mjerenja")
                        .HasForeignKey("Senzorid");
                });

            modelBuilder.Entity("Irma.Models.Senzor", b =>
                {
                    b.HasOne("Irma.Models.Uredjaj", null)
                        .WithMany("senzori")
                        .HasForeignKey("Uredjajid");
                });
#pragma warning restore 612, 618
        }
    }
}
